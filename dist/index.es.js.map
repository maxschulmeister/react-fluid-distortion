{"version":3,"file":"index.es.js","sources":["../node_modules/react/cjs/react-jsx-runtime.production.js","../node_modules/react/cjs/react-jsx-runtime.development.js","../node_modules/react/jsx-runtime.js","../lib/constant.ts","../lib/utils.ts","../lib/glsl/composite.frag","../lib/effect/FluidEffect.tsx","../lib/effect/Fluid.tsx","../lib/hooks/useDoubleFBO.tsx","../lib/hooks/useFBOs.tsx","../lib/glsl/base.vert","../lib/glsl/clear.frag","../lib/glsl/curl.frag","../lib/glsl/divergence.frag","../lib/glsl/gradientSubstract.frag","../lib/glsl/pressure.frag","../lib/glsl/splat.frag","../lib/glsl/advection.frag","../lib/glsl/vorticity.frag","../lib/hooks/useMaterials.tsx","../lib/hooks/usePointer.tsx","../lib/Fluid.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = require(\"react\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    React = {\n      \"react-stack-bottom-frame\": function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React[\"react-stack-bottom-frame\"].bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsx = function (type, config, maybeKey, source, self) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        !1,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n    exports.jsxs = function (type, config, maybeKey, source, self) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        !0,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  })();\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","export const OPTS = {\n    blend: 5,\n    intensity: 2,\n    force: 1.1,\n    distortion: 0.4,\n    curl: 1.9,\n    radius: 0.3,\n    swirl: 4,\n    pressure: 0.8,\n    densityDissipation: 0.96,\n    velocityDissipation: 1.0,\n    fluidColor: '#3300ff',\n    backgroundColor: '#070410',\n    showBackground: true,\n    rainbow: false,\n    dyeRes: 512,\n    simRes: 128,\n    refreshRate: 60,\n} as const;\n","import { Color, Vector3 } from 'three';\nimport { OPTS } from './constant';\n\nexport const hexToRgb = (hex: string) => {\n    const color = new Color(hex);\n\n    return new Vector3(color.r, color.g, color.b);\n};\n\nexport const normalizeScreenHz = (value: number, dt: number) => {\n    return Math.pow(value, dt * OPTS.refreshRate);\n};\n","uniform sampler2D tFluid;\n\nuniform vec3 uColor;\nuniform vec3 uBackgroundColor;\n\nuniform float uDistort;\nuniform float uIntensity;\nuniform float uRainbow;\nuniform float uBlend;\nuniform float uShowBackground;\n\nvoid mainImage(const in vec4 inputColor, const in vec2 uv, out vec4 outputColor) {\n\n    vec3 fluidColor = texture2D(tFluid, uv).rgb;\n\n    vec2 distortedUv = uv - fluidColor.rg * uDistort * 0.001;\n\n    vec4 texture = texture2D(inputBuffer, distortedUv);\n\n    float intensity = length(fluidColor) * uIntensity * 0.0001;\n\n    vec3 selectedColor = uColor * length(fluidColor);\n\n    vec4 colorForFluidEffect = vec4(uRainbow == 1.0 ? fluidColor : selectedColor, 1.0);\n\n    vec4 computedBgColor = vec4(uBackgroundColor, 1.);\n\n    outputColor = mix(texture, colorForFluidEffect, intensity);\n\n    vec4 computedFluidColor = mix(texture, colorForFluidEffect, uBlend * 0.01);\n\n    vec4 finalColor;\n\n    if(texture.a < 0.1) {\n        finalColor = mix(computedBgColor, colorForFluidEffect, intensity);\n    } else {\n        finalColor = mix(computedFluidColor, computedBgColor, 1.0 - texture.a);\n    }\n\n    outputColor = finalColor;\n}\n","import { Effect } from 'postprocessing';\nimport { Texture, Uniform, Vector3 } from 'three';\nimport { EffectProps } from '../types';\nimport { hexToRgb } from '../utils';\nimport compositeFrag from '../glsl/composite.frag';\n\ntype Uniforms = {\n    tFluid: Texture | null;\n    uColor: Vector3;\n    uBackgroundColor: Vector3;\n    uRainbow: boolean;\n    uShowBackground: boolean;\n    uDistort: number;\n    uBlend: number;\n    uIntensity: number;\n};\n\nexport class FluidEffect extends Effect {\n    state: Partial<EffectProps>;\n\n    constructor(props: EffectProps = {}) {\n        const uniforms: Record<keyof Uniforms, Uniform> = {\n            tFluid: new Uniform(props.tFluid),\n            uDistort: new Uniform(props.distortion),\n            uRainbow: new Uniform(props.rainbow),\n            uIntensity: new Uniform(props.intensity),\n            uBlend: new Uniform(props.blend),\n            uShowBackground: new Uniform(props.showBackground),\n\n            uColor: new Uniform(hexToRgb(props.fluidColor!)),\n            uBackgroundColor: new Uniform(hexToRgb(props.backgroundColor!)),\n        };\n\n        super('FluidEffect', compositeFrag, {\n            blendFunction: props.blendFunction,\n            uniforms: new Map(Object.entries(uniforms)),\n        });\n\n        this.state = {\n            ...props,\n        };\n    }\n\n    private updateUniform<K extends keyof Uniforms>(key: K, value: Uniforms[K]) {\n        const uniform = this.uniforms.get(key);\n        if (uniform) {\n            uniform.value = value;\n        }\n    }\n\n    update() {\n        this.updateUniform('uIntensity', this.state.intensity!);\n        this.updateUniform('uDistort', this.state.distortion!);\n        this.updateUniform('uRainbow', this.state.rainbow!);\n        this.updateUniform('uBlend', this.state.blend!);\n        this.updateUniform('uShowBackground', this.state.showBackground!);\n        this.updateUniform('uColor', hexToRgb(this.state.fluidColor!));\n        this.updateUniform('uBackgroundColor', hexToRgb(this.state.backgroundColor!));\n    }\n}\n","import { forwardRef, useEffect, useMemo } from 'react';\nimport { EffectProps } from '../types';\nimport { FluidEffect } from './FluidEffect';\n\nexport const Effect = forwardRef(function Fluid(props: EffectProps, ref) {\n    // prevent re-creating the effect on every render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const effect = useMemo(() => new FluidEffect(props), []);\n\n    useEffect(() => {\n        effect.state = { ...props };\n        effect.update();\n    }, [effect, props]);\n\n    useEffect(() => {\n        return () => {\n            effect.dispose?.();\n        };\n    }, [effect]);\n\n    return <primitive ref={ref} object={effect} dispose={null} />;\n});\n","import * as THREE from 'three'\nimport { useFBO } from '@react-three/drei'\nimport { useRef } from 'react'\n\ntype FBO = {\n    read: THREE.WebGLRenderTarget\n    write: THREE.WebGLRenderTarget\n    swap: () => void\n    dispose: () => void\n}\n\ntype Options = {\n    minFilter?: THREE.TextureFilter\n    format?: THREE.PixelFormat\n    type?: THREE.TextureDataType\n    depth: boolean\n}\n\nexport const useDoubleFBO = (width: number, height: number, options: Options) => {\n    const read = useFBO(width, height, options)\n\n    const write = useFBO(width, height, options)\n\n    const fbo = useRef<FBO>({\n        read,\n        write,\n        swap: () => {\n            const temp = fbo.read\n            fbo.read = fbo.write\n            fbo.write = temp\n        },\n        dispose: () => {\n            read.dispose()\n            write.dispose()\n        },\n    }).current\n\n    return fbo\n}\n","import * as THREE from 'three';\n\nimport { useFBO } from '@react-three/drei';\nimport { useEffect, useMemo } from 'react';\nimport { useDoubleFBO } from '../hooks/useDoubleFBO';\nimport { OPTS } from '../constant';\n\nexport const useFBOs = () => {\n    const density = useDoubleFBO(OPTS.dyeRes, OPTS.dyeRes, {\n        type: THREE.HalfFloatType,\n        format: THREE.RGBAFormat,\n        minFilter: THREE.LinearFilter,\n        depth: false,\n    });\n\n    const velocity = useDoubleFBO(OPTS.simRes, OPTS.simRes, {\n        type: THREE.HalfFloatType,\n        format: THREE.RGFormat,\n        minFilter: THREE.LinearFilter,\n        depth: false,\n    });\n\n    const pressure = useDoubleFBO(OPTS.simRes, OPTS.simRes, {\n        type: THREE.HalfFloatType,\n        format: THREE.RedFormat,\n        minFilter: THREE.NearestFilter,\n        depth: false,\n    });\n\n    const divergence = useFBO(OPTS.simRes, OPTS.simRes, {\n        type: THREE.HalfFloatType,\n        format: THREE.RedFormat,\n        minFilter: THREE.NearestFilter,\n        depth: false,\n    });\n\n    const curl = useFBO(OPTS.simRes, OPTS.simRes, {\n        type: THREE.HalfFloatType,\n        format: THREE.RedFormat,\n        minFilter: THREE.NearestFilter,\n        depth: false,\n    });\n\n    const FBOs = useMemo(() => {\n        return {\n            density,\n            velocity,\n            pressure,\n            divergence,\n            curl,\n        };\n    }, [curl, density, divergence, pressure, velocity]);\n\n    useEffect(() => {\n        return () => {\n            for (const FBO of Object.values(FBOs)) {\n                FBO.dispose();\n            }\n        };\n    }, [FBOs]);\n\n    return FBOs;\n};\n","varying vec2 vUv;\nvarying vec2 vL;\nvarying vec2 vR;\nvarying vec2 vT;\nvarying vec2 vB;\nuniform vec2 texelSize;\n\nvoid main() {\n  vUv = uv;\n\n  vL = vUv - vec2(texelSize.x, 0.0);\n\n  vR = vUv + vec2(texelSize.x, 0.0);\n\n  vT = vUv + vec2(0.0, texelSize.y);\n\n  vB = vUv - vec2(0.0, texelSize.y);\n\n  gl_Position = vec4(position, 1.0);\n}\n","precision highp float;\n\nvarying vec2 vUv;\nuniform sampler2D uTexture;\nuniform float uClearValue;\n\nvoid main() { gl_FragColor = uClearValue * texture2D(uTexture, vUv); }\n","precision highp float;\n\nvarying vec2 vUv;\nvarying vec2 vL;\nvarying vec2 vR;\nvarying vec2 vT;\nvarying vec2 vB;\n\nuniform sampler2D uVelocity;\n\nvoid main() {\n    float L = texture2D(uVelocity, vL).y;\n\n    float R = texture2D(uVelocity, vR).y;\n\n    float T = texture2D(uVelocity, vT).x;\n\n    float B = texture2D(uVelocity, vB).x;\n\n    float vorticity = R - L - T + B;\n\n    gl_FragColor = vec4(vorticity, 0.0, 0.0, 1.0);\n}","precision highp float;\n\nvarying highp vec2 vUv;\nvarying highp vec2 vL;\nvarying highp vec2 vR;\nvarying highp vec2 vT;\nvarying highp vec2 vB;\n\nuniform sampler2D uVelocity;\n\nvoid main() {\n    float L = texture2D(uVelocity, vL).x;\n\n    float R = texture2D(uVelocity, vR).x;\n\n    float T = texture2D(uVelocity, vT).y;\n\n    float B = texture2D(uVelocity, vB).y;\n\n    vec2 C = texture2D(uVelocity, vUv).xy;\n\n    if(vL.x < 0.0) {\n        L = -C.x;\n    }\n\n    if(vR.x > 1.0) {\n        R = -C.x;\n    }\n\n    if(vT.y > 1.0) {\n        T = -C.y;\n    }\n\n    if(vB.y < 0.0) {\n        B = -C.y;\n    }\n\n    float div = 0.5 * (R - L + T - B);\n\n    gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n}","precision highp float;\n\nvarying highp vec2 vUv;\nvarying highp vec2 vL;\nvarying highp vec2 vR;\nvarying highp vec2 vT;\nvarying highp vec2 vB;\n\nuniform sampler2D uPressure;\nuniform sampler2D uVelocity;\n\nvoid main() {\n    float L = texture2D(uPressure, vL).x;\n\n    float R = texture2D(uPressure, vR).x;\n\n    float T = texture2D(uPressure, vT).x;\n\n    float B = texture2D(uPressure, vB).x;\n\n    vec2 velocity = texture2D(uVelocity, vUv).xy;\n\n    velocity.xy -= vec2(R - L, T - B);\n\n    gl_FragColor = vec4(velocity, 0.0, 1.0);\n}","precision highp float;\n\nvarying highp vec2 vUv;\nvarying highp vec2 vL;\nvarying highp vec2 vR;\nvarying highp vec2 vT;\nvarying highp vec2 vB;\n\nuniform sampler2D uPressure;\nuniform sampler2D uDivergence;\n\nvoid main() {\n    float L = texture2D(uPressure, vL).x;\n\n    float R = texture2D(uPressure, vR).x;\n\n    float T = texture2D(uPressure, vT).x;\n\n    float B = texture2D(uPressure, vB).x;\n\n    float C = texture2D(uPressure, vUv).x;\n\n    float divergence = texture2D(uDivergence, vUv).x;\n\n    float pressure = (L + R + B + T - divergence) * 0.25;\n\n    gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n}\n","varying vec2 vUv;\n\nuniform sampler2D uTarget;\nuniform float aspectRatio;\nuniform vec3 uColor;\nuniform vec2 uPointer;\nuniform float uRadius;\n\nvoid main() {\n    vec2 p = vUv - uPointer.xy;\n\n    p.x *= aspectRatio;\n\n    vec3 splat = exp(-dot(p, p) / uRadius) * uColor;\n\n    vec3 base = texture2D(uTarget, vUv).xyz;\n\n    gl_FragColor = vec4(base + splat, 1.0);\n}\n","precision highp float;\n\nvarying vec2 vUv;\nuniform sampler2D uVelocity;\nuniform sampler2D uSource;\nuniform vec2 texelSize;\nuniform float dt;\nuniform float uDissipation;\n\nvoid main() {\n    vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n\n    gl_FragColor = uDissipation * texture2D(uSource, coord);\n\n    gl_FragColor.a = 1.0;\n}","precision highp float;\n\nvarying vec2 vUv;\nvarying vec2 vL;\nvarying vec2 vR;\nvarying vec2 vT;\nvarying vec2 vB;\n\nuniform sampler2D uVelocity;\nuniform sampler2D uCurl;\nuniform float uCurlValue;\nuniform float dt;\n\nvoid main() {\n    float L = texture2D(uCurl, vL).x;\n\n    float R = texture2D(uCurl, vR).x;\n\n    float T = texture2D(uCurl, vT).x;\n\n    float B = texture2D(uCurl, vB).x;\n\n    float C = texture2D(uCurl, vUv).x;\n\n    vec2 force = vec2(abs(T) - abs(B), abs(R) - abs(L)) * 0.5;\n\n    force /= length(force) + 1.;\n\n    force *= uCurlValue * C;\n\n    force.y *= -1.;\n\n    vec2 vel = texture2D(uVelocity, vUv).xy;\n\n    gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n}","import { ShaderMaterial, Texture, Vector2, Vector3 } from 'three';\nimport { useEffect, useMemo } from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { OPTS } from '../constant';\n\nimport baseVertex from '../glsl/base.vert';\nimport clearFrag from '../glsl/clear.frag';\nimport curlFrag from '../glsl/curl.frag';\nimport divergenceFrag from '../glsl/divergence.frag';\nimport gradientSubstractFrag from '../glsl/gradientSubstract.frag';\nimport pressureFrag from '../glsl/pressure.frag';\nimport splatFrag from '../glsl/splat.frag';\nimport advectionFrag from '../glsl/advection.frag';\nimport vorticityFrag from '../glsl/vorticity.frag';\n\nexport const useMaterials = (): { [key: string]: ShaderMaterial } => {\n    const size = useThree((s) => s.size);\n\n    const shaderMaterials = useMemo(() => {\n        const advection = new ShaderMaterial({\n            uniforms: {\n                uVelocity: {\n                    value: new Texture(),\n                },\n                uSource: {\n                    value: new Texture(),\n                },\n                dt: {\n                    value: 1 / OPTS.refreshRate,\n                },\n                uDissipation: {\n                    value: 1.0,\n                },\n                texelSize: { value: new Vector2() },\n            },\n            fragmentShader: advectionFrag,\n            vertexShader: baseVertex,\n            depthTest: false,\n            depthWrite: false,\n        });\n\n        const clear = new ShaderMaterial({\n            uniforms: {\n                uTexture: {\n                    value: new Texture(),\n                },\n                uClearValue: {\n                    value: OPTS.pressure,\n                },\n                texelSize: {\n                    value: new Vector2(),\n                },\n            },\n            fragmentShader: clearFrag,\n            vertexShader: baseVertex,\n            depthTest: false,\n            depthWrite: false,\n        });\n\n        const curl = new ShaderMaterial({\n            uniforms: {\n                uVelocity: {\n                    value: new Texture(),\n                },\n                texelSize: {\n                    value: new Vector2(),\n                },\n            },\n            fragmentShader: curlFrag,\n            vertexShader: baseVertex,\n            depthTest: false,\n            depthWrite: false,\n        });\n\n        const divergence = new ShaderMaterial({\n            uniforms: {\n                uVelocity: {\n                    value: new Texture(),\n                },\n                texelSize: {\n                    value: new Vector2(),\n                },\n            },\n            fragmentShader: divergenceFrag,\n            vertexShader: baseVertex,\n            depthTest: false,\n            depthWrite: false,\n        });\n\n        const gradientSubstract = new ShaderMaterial({\n            uniforms: {\n                uPressure: {\n                    value: new Texture(),\n                },\n                uVelocity: {\n                    value: new Texture(),\n                },\n                texelSize: {\n                    value: new Vector2(),\n                },\n            },\n            fragmentShader: gradientSubstractFrag,\n            vertexShader: baseVertex,\n            depthTest: false,\n            depthWrite: false,\n        });\n\n        const pressure = new ShaderMaterial({\n            uniforms: {\n                uPressure: {\n                    value: new Texture(),\n                },\n                uDivergence: {\n                    value: new Texture(),\n                },\n                texelSize: {\n                    value: new Vector2(),\n                },\n            },\n            fragmentShader: pressureFrag,\n            vertexShader: baseVertex,\n            depthTest: false,\n            depthWrite: false,\n        });\n\n        const splat = new ShaderMaterial({\n            uniforms: {\n                uTarget: {\n                    value: new Texture(),\n                },\n                aspectRatio: {\n                    value: size.width / size.height,\n                },\n                uColor: {\n                    value: new Vector3(),\n                },\n                uPointer: {\n                    value: new Vector2(),\n                },\n                uRadius: {\n                    value: OPTS.radius / 100.0,\n                },\n                texelSize: {\n                    value: new Vector2(),\n                },\n            },\n            fragmentShader: splatFrag,\n            vertexShader: baseVertex,\n            depthTest: false,\n            depthWrite: false,\n        });\n\n        const vorticity = new ShaderMaterial({\n            uniforms: {\n                uVelocity: {\n                    value: new Texture(),\n                },\n                uCurl: {\n                    value: new Texture(),\n                },\n                uCurlValue: {\n                    value: OPTS.curl,\n                },\n                dt: {\n                    value: 1 / OPTS.refreshRate,\n                },\n                texelSize: {\n                    value: new Vector2(),\n                },\n            },\n            fragmentShader: vorticityFrag,\n            vertexShader: baseVertex,\n            depthTest: false,\n            depthWrite: false,\n        });\n\n        return {\n            splat,\n            curl,\n            clear,\n            divergence,\n            pressure,\n            gradientSubstract,\n            advection,\n            vorticity,\n        };\n    }, [size]);\n\n    useEffect(() => {\n        for (const material of Object.values(shaderMaterials)) {\n            const aspectRatio = size.width / (size.height + 400);\n            material.uniforms.texelSize.value.set(1 / (OPTS.simRes * aspectRatio), 1 / OPTS.simRes);\n        }\n\n        return () => {\n            for (const material of Object.values(shaderMaterials)) {\n                material.dispose();\n            }\n        };\n    }, [shaderMaterials, size]);\n\n    return shaderMaterials;\n};\n","import { ThreeEvent, useThree } from '@react-three/fiber';\nimport { useCallback, useRef } from 'react';\nimport { Vector2 } from 'three';\n\ntype SplatStack = {\n    mouseX: number;\n    mouseY: number;\n    velocityX: number;\n    velocityY: number;\n};\n\nexport const usePointer = ({ force }: { force: number }) => {\n    const size = useThree((three) => three.size);\n\n    const splatStack: SplatStack[] = useRef([]).current;\n\n    const lastMouse = useRef<Vector2>(new Vector2());\n    const hasMoved = useRef<boolean>(false);\n\n    const onPointerMove = useCallback(\n        (event: ThreeEvent<PointerEvent>) => {\n            const deltaX = event.x - lastMouse.current.x;\n            const deltaY = event.y - lastMouse.current.y;\n\n            if (!hasMoved.current) {\n                hasMoved.current = true;\n                lastMouse.current.set(event.x, event.y);\n                return;\n            }\n\n            lastMouse.current.set(event.x, event.y);\n\n            splatStack.push({\n                mouseX: event.x / size.width,\n                mouseY: 1.0 - event.y / size.height,\n                velocityX: deltaX * force,\n                velocityY: -deltaY * force,\n            });\n        },\n        [force, size.height, size.width, splatStack],\n    );\n\n    return { onPointerMove, splatStack };\n};\n","import { createPortal, useFrame, useThree } from '@react-three/fiber';\nimport { BlendFunction } from 'postprocessing';\nimport { useCallback, useMemo, useRef } from 'react';\nimport { Camera, Color, Mesh, Scene, Texture, Vector2, Vector3 } from 'three';\nimport { ShaderPass } from 'three/examples/jsm/Addons.js';\nimport { OPTS } from './constant';\nimport { Effect as FluidEffect } from './effect/Fluid';\nimport { useFBOs } from './hooks/useFBOs';\nimport { useMaterials } from './hooks/useMaterials';\nimport { usePointer } from './hooks/usePointer';\nimport { Props } from './types';\nimport { normalizeScreenHz } from './utils';\n\ntype Uniforms = {\n    uColor: Vector3 | Color;\n    uPointer: Vector2;\n    uTarget: Texture | null;\n    uVelocity: Texture;\n    uCurl: Texture;\n    uTexture: Texture;\n    uPressure: Texture;\n    uDivergence: Texture;\n    uSource: Texture;\n    uRadius: number;\n    uClearValue: number;\n    uCurlValue: number;\n    uDissipation: number;\n};\n\nexport const Fluid = ({\n    blend = OPTS.blend,\n    force = OPTS.force,\n    radius = OPTS.radius,\n    curl = OPTS.curl,\n    swirl = OPTS.swirl,\n    intensity = OPTS.intensity,\n    distortion = OPTS.distortion,\n    fluidColor = OPTS.fluidColor,\n    backgroundColor = OPTS.backgroundColor,\n    showBackground = OPTS.showBackground,\n    rainbow = OPTS.rainbow,\n    pressure = OPTS.pressure,\n    densityDissipation = OPTS.densityDissipation,\n    velocityDissipation = OPTS.velocityDissipation,\n    blendFunction = BlendFunction.NORMAL,\n}: Props) => {\n    const size = useThree((three) => three.size);\n    const gl = useThree((three) => three.gl);\n    const camera = useThree((three) => three.camera);\n\n    const bufferScene = useMemo(() => new Scene(), []);\n    const bufferCamera = useMemo(() => new Camera(), []);\n\n    const meshRef = useRef<Mesh>(null);\n    const postRef = useRef<ShaderPass>(null);\n    const pointerRef = useRef(new Vector2());\n    const colorRef = useRef(new Vector3());\n\n    const FBOs = useFBOs();\n    const materials = useMaterials();\n    const { onPointerMove, splatStack } = usePointer({ force });\n\n    const setShaderMaterial = useCallback(\n        (name: keyof ReturnType<typeof useMaterials>) => {\n            if (!meshRef.current) return;\n\n            meshRef.current.material = materials[name];\n            meshRef.current.material.needsUpdate = true;\n        },\n        [materials],\n    );\n\n    const setRenderTarget = useCallback(\n        (name: keyof ReturnType<typeof useFBOs>) => {\n            const target = FBOs[name];\n\n            if ('write' in target) {\n                gl.setRenderTarget(target.write);\n                gl.clear();\n                gl.render(bufferScene, bufferCamera);\n                target.swap();\n            } else {\n                gl.setRenderTarget(target);\n                gl.clear();\n                gl.render(bufferScene, bufferCamera);\n            }\n        },\n        [bufferCamera, bufferScene, FBOs, gl],\n    );\n\n    const setUniforms = useCallback(\n        <K extends keyof Uniforms>(\n            material: keyof ReturnType<typeof useMaterials>,\n            uniform: K,\n            value: Uniforms[K],\n        ) => {\n            const mat = materials[material];\n\n            if (mat && mat.uniforms[uniform]) {\n                mat.uniforms[uniform].value = value;\n            }\n        },\n        [materials],\n    );\n\n    useFrame((_, delta) => {\n        if (!meshRef.current || !postRef.current) return;\n\n        // Make the mesh face the camera\n        meshRef.current.quaternion.copy(camera.quaternion);\n\n        for (let i = splatStack.length - 1; i >= 0; i--) {\n            const { mouseX, mouseY, velocityX, velocityY } = splatStack[i];\n\n            pointerRef.current.set(mouseX, mouseY);\n            colorRef.current.set(velocityX, velocityY, 10.0);\n\n            setShaderMaterial('splat');\n            setUniforms('splat', 'uTarget', FBOs.velocity.read.texture);\n            setUniforms('splat', 'uPointer', pointerRef.current);\n            setUniforms('splat', 'uColor', colorRef.current);\n            setUniforms('splat', 'uRadius', radius / 100.0);\n            setRenderTarget('velocity');\n            setUniforms('splat', 'uTarget', FBOs.density.read.texture);\n            setRenderTarget('density');\n\n            splatStack.pop();\n        }\n\n        setShaderMaterial('curl');\n        setUniforms('curl', 'uVelocity', FBOs.velocity.read.texture);\n        setRenderTarget('curl');\n\n        setShaderMaterial('vorticity');\n        setUniforms('vorticity', 'uVelocity', FBOs.velocity.read.texture);\n        setUniforms('vorticity', 'uCurl', FBOs.curl.texture);\n        setUniforms('vorticity', 'uCurlValue', curl);\n        setRenderTarget('velocity');\n\n        setShaderMaterial('divergence');\n        setUniforms('divergence', 'uVelocity', FBOs.velocity.read.texture);\n        setRenderTarget('divergence');\n\n        setShaderMaterial('clear');\n        setUniforms('clear', 'uTexture', FBOs.pressure.read.texture);\n        setUniforms('clear', 'uClearValue', normalizeScreenHz(pressure, delta));\n        setRenderTarget('pressure');\n\n        setShaderMaterial('pressure');\n        setUniforms('pressure', 'uDivergence', FBOs.divergence.texture);\n\n        for (let i = 0; i < swirl; i++) {\n            setUniforms('pressure', 'uPressure', FBOs.pressure.read.texture);\n            setRenderTarget('pressure');\n        }\n\n        setShaderMaterial('gradientSubstract');\n        setUniforms('gradientSubstract', 'uPressure', FBOs.pressure.read.texture);\n        setUniforms('gradientSubstract', 'uVelocity', FBOs.velocity.read.texture);\n        setRenderTarget('velocity');\n\n        setShaderMaterial('advection');\n        setUniforms('advection', 'uVelocity', FBOs.velocity.read.texture);\n        setUniforms('advection', 'uSource', FBOs.velocity.read.texture);\n        setUniforms('advection', 'uDissipation', normalizeScreenHz(velocityDissipation, delta));\n\n        setRenderTarget('velocity');\n        setUniforms('advection', 'uVelocity', FBOs.velocity.read.texture);\n        setUniforms('advection', 'uSource', FBOs.density.read.texture);\n        setUniforms('advection', 'uDissipation', normalizeScreenHz(densityDissipation, delta));\n\n        setRenderTarget('density');\n    });\n\n    return (\n        <>\n            {createPortal(\n                <mesh\n                    ref={meshRef}\n                    onPointerMove={onPointerMove}\n                    scale={[size.width, size.height, 1]}>\n                    <planeGeometry args={[2, 2, 10, 10]} />\n                </mesh>,\n                bufferScene,\n            )}\n\n            <FluidEffect\n                blendFunction={blendFunction}\n                intensity={intensity}\n                rainbow={rainbow}\n                distortion={distortion}\n                backgroundColor={backgroundColor}\n                blend={blend}\n                fluidColor={fluidColor}\n                showBackground={showBackground}\n                ref={postRef}\n                tFluid={FBOs.density.read.texture}\n            />\n        </>\n    );\n};\n"],"names":["REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","jsxProd","type","config","maybeKey","key","propName","reactJsxRuntime_production","getComponentNameFromType","REACT_CLIENT_REFERENCE","REACT_PROFILER_TYPE","REACT_STRICT_MODE_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_ACTIVITY_TYPE","REACT_PORTAL_TYPE","REACT_CONTEXT_TYPE","REACT_CONSUMER_TYPE","REACT_FORWARD_REF_TYPE","innerType","REACT_MEMO_TYPE","REACT_LAZY_TYPE","testStringCoercion","value","checkKeyStringCoercion","JSCompiler_inline_result","JSCompiler_temp_const","JSCompiler_inline_result$jscomp$0","getTaskName","name","getOwner","dispatcher","ReactSharedInternals","UnknownOwner","hasValidKey","hasOwnProperty","getter","defineKeyPropWarningGetter","props","displayName","warnAboutAccessingKey","specialPropKeyWarningShown","elementRefGetterWithDeprecationWarning","componentName","didWarnAboutElementRef","ReactElement","self","source","owner","debugStack","debugTask","jsxDEVImpl","isStaticChildren","children","isArrayImpl","validateChildKeys","keys","k","didWarnAboutKeySpread","node","React","require$$0","createTask","callStackForError","unknownOwnerDebugStack","unknownOwnerDebugTask","reactJsxRuntime_development","trackActualOwner","jsxRuntimeModule","require$$1","OPTS","hexToRgb","hex","color","Color","Vector3","normalizeScreenHz","dt","composite_default","FluidEffect","Effect","uniforms","Uniform","compositeFrag","__publicField","uniform","forwardRef","ref","effect","useMemo","useEffect","_a","useDoubleFBO","width","height","options","read","useFBO","write","fbo","useRef","temp","useFBOs","density","THREE","velocity","pressure","divergence","curl","FBOs","FBO","base_default","clear_default","curl_default","divergence_default","gradientSubstract_default","pressure_default","splat_default","advection_default","vorticity_default","useMaterials","size","useThree","s","shaderMaterials","advection","ShaderMaterial","Texture","Vector2","advectionFrag","baseVertex","clear","clearFrag","curlFrag","divergenceFrag","gradientSubstract","gradientSubstractFrag","pressureFrag","splat","splatFrag","vorticity","vorticityFrag","material","aspectRatio","usePointer","force","three","splatStack","lastMouse","hasMoved","useCallback","event","deltaX","deltaY","Fluid","blend","radius","swirl","intensity","distortion","fluidColor","backgroundColor","showBackground","rainbow","densityDissipation","velocityDissipation","blendFunction","BlendFunction","gl","camera","bufferScene","Scene","bufferCamera","Camera","meshRef","postRef","pointerRef","colorRef","materials","onPointerMove","setShaderMaterial","setRenderTarget","target","setUniforms","mat","useFrame","_","delta","i","mouseX","mouseY","velocityX","velocityY","jsxs","Fragment","createPortal","jsx"],"mappings":"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","x_google_ignoreList":[0,1,2]}